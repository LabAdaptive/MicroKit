NAME	 	= STM32_API
OBJDIR  	= obj 
LIBDIR   	= lib 
SRCs     	= $(wildcard *.c)
OBJs     	= $(SRCs:%.c=obj/%.o) 
BIN             = ${BINDIR}/${PROJECT}.bin
ELF             = ${BINDIR}/${PROJECT}.elf
HEX             = ${BINDIR}/${PROJECT}.hex
   
#
# library
#
LIB_ROOT = ../../..
DEVICE = $(LIB_ROOT)/Drivers/CMSIS/Device/ST/STM32F1xx
ACTIVE_PROJECT = ../../../../../inc
CORE = $(LIB_ROOT)/Drivers/CMSIS/Include
PERIPH = $(LIB_ROOT)/Drivers/STM32F1xx_HAL_Driver
USBCORE  = $(LIB_ROOT)/Middlewares/ST/STM32_USB_Device_Library/Core
USBCLASS = $(LIB_ROOT)/Middlewares/ST/STM32_USB_Device_Library/Class/CDC

#
# search path
#


vpath %.c $(DEVICE)
vpath %.c $(CORE)
vpath %.c $(PERIPH)


OBJDIR = obj
BINDIR = bin
#
# toolchain
#
TOOL_ROOT = /usr/bin
CC = $(TOOL_ROOT)/arm-none-eabi-gcc
LD = $(TOOL_ROOT)/arm-none-eabi-gcc
AR = $(TOOL_ROOT)/arm-none-eabi-ar
OBJCOPY = $(TOOL_ROOT)/arm-none-eabi-objcopy

#
# C flags
#
CFLAGS  = -O0 -g -Wall -mcpu=cortex-m3 -mthumb 
CFLAGS  += -I$(DEVICE) -I$(DEVICE)/Include -I$(CORE) -Iinc -iquoteinc 
CFLAGS  += -I$(PERIPH)/Inc -I$(DISCOVERY) -I$(USBCORE)/Inc -iquote$(USBCORE)/Inc -I$(USBCLASS)/Inc -iquote$(USBCLASS)/Inc 
CFLAGS  += -I$(ACTIVE_PROJECT) -iquote$(ACTIVE_PROJECT)
CFLAGS  += -DSTM32F105xC

all: ${OBJDIR} ${LIBDIR} ${NAME}.a
	echo "API Compile Completed"



${NAME}.a: ${OBJs}
	${AR} rcs lib/lib${NAME}.a $^

clean:
	rm -f obj/*.o
	rm -f lib/*.a

obj/%.o:%.c
	$(CC) ${CFLAGS} -c -o $@ $<

${OBJDIR}:  
	mkdir -p obj 

${LIBDIR}: 
	mkdir -p lib
